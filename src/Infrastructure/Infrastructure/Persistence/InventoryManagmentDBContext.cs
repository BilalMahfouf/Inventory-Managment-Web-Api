// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Domain.Entities;
using Infrastructure.Persistence.Configurations;
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
#nullable enable

namespace Infrastructure.Persistence;

public partial class InventoryManagmentDBContext : DbContext
{
    public InventoryManagmentDBContext(DbContextOptions<InventoryManagmentDBContext> options)
        : base(options)
    {
    }

    public virtual DbSet<AlertRule> AlertRules { get; set; }

    public virtual DbSet<AlertType> AlertTypes { get; set; }

    public virtual DbSet<AuditLog> AuditLogs { get; set; }

    public virtual DbSet<Customer> Customers { get; set; }

    public virtual DbSet<CustomerCategory> CustomerCategories { get; set; }

    public virtual DbSet<CustomerContact> CustomerContacts { get; set; }

    public virtual DbSet<Inventory> Inventories { get; set; }

    public virtual DbSet<Location> Locations { get; set; }

    public virtual DbSet<LocationType> LocationTypes { get; set; }

    public virtual DbSet<Product> Products { get; set; }

    public virtual DbSet<ProductCategory> ProductCategories { get; set; }

    public virtual DbSet<ProductImage> ProductImages { get; set; }

    public virtual DbSet<ProductSupplier> ProductSuppliers { get; set; }

    public virtual DbSet<PurchaseOrder> PurchaseOrders { get; set; }

    public virtual DbSet<PurchaseOrderItem> PurchaseOrderItems { get; set; }

    public virtual DbSet<SalesOrder> SalesOrders { get; set; }

    public virtual DbSet<SalesOrderItem> SalesOrderItems { get; set; }

    public virtual DbSet<StockMovement> StockMovements { get; set; }

    public virtual DbSet<StockMovementType> StockMovementTypes { get; set; }

    public virtual DbSet<StockTransfer> StockTransfers { get; set; }

    public virtual DbSet<Supplier> Suppliers { get; set; }

    public virtual DbSet<SupplierContact> SupplierContacts { get; set; }

    public virtual DbSet<SupplierType> SupplierTypes { get; set; }

    public virtual DbSet<UnitOfMeasure> UnitOfMeasures { get; set; }

    public virtual DbSet<User> Users { get; set; }

    public virtual DbSet<UserRole> UserRoles { get; set; }

    public virtual DbSet<UserSession> UserSessions { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.ApplyConfiguration(new Configurations.AlertRuleConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.AlertTypeConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.AuditLogConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.CustomerConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.CustomerCategoryConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.CustomerContactConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.InventoryConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.LocationConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.LocationTypeConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.ProductConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.ProductCategoryConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.ProductImageConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.ProductSupplierConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.PurchaseOrderConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.PurchaseOrderItemConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.SalesOrderConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.SalesOrderItemConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.StockMovementConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.StockMovementTypeConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.StockTransferConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.SupplierConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.SupplierContactConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.SupplierTypeConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.UnitOfMeasureConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.UserConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.UserRoleConfiguration());
        modelBuilder.ApplyConfiguration(new Configurations.UserSessionConfiguration());

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}
